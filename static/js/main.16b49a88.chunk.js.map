{"version":3,"sources":["components/MyCheckbox.js","utility/arrays-helper.js","components/CheckboxOption.js","components/RadioOption.js","Categories.js","App.js","reportWebVitals.js","index.js"],"names":["MyCheckbox","props","useState","isChecked","setIsChecked","FormControlLabel","value","index","control","Checkbox","color","onClick","isOn","arr","saved","JSON","parse","sessionStorage","getItem","category","title","filter","ele","push","setItem","stringify","label","labelPlacement","checked","CheckboxOption","windowWidth","useWindowWidth","checkboxes","array","i","options","length","element","create_checkboxes","get_selected","forEach","className","style","width","RadioOption","selectedState","RadioGroup","onChange","event","target","Radio","choices","Categories","reviewInfo","setReviewInfo","categoryComponents","type","create_categories","check_review_in_new_window","text","window","open","document","write","String","raw","replaceAll","Button","variant","localReviewString","appendOption","option","categoryJson","selectedOptions","includes","navigator","clipboard","writeText","then","console","log","err","error","App","config_json","categories","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.16b49a88.chunk.js","sourcesContent":["import \"./Option.css\";\r\nimport React, { useState } from \"react\";\r\nimport { Checkbox, FormControlLabel } from \"@material-ui/core\";\r\nimport arrayRemove from \"../utility/arrays-helper\";\r\n\r\nexport default function MyCheckbox(props) {\r\n  const [isChecked, setIsChecked] = useState(false);\r\n\r\n  const toggle = () => {\r\n    props.props.isOn = !isChecked;\r\n    var saved = JSON.parse(\r\n      sessionStorage.getItem(props.props.category) || \"[]\"\r\n    );\r\n\r\n    if (!isChecked) {\r\n      saved.push(props.props.title);\r\n    } else {\r\n      saved = arrayRemove(saved, props.props.title);\r\n    }\r\n    sessionStorage.setItem(props.props.category, JSON.stringify(saved));\r\n\r\n    setIsChecked(!isChecked);\r\n  };\r\n\r\n  return (\r\n    <FormControlLabel\r\n      value={props.props.index}\r\n      control={<Checkbox color=\"primary\" onClick={toggle} />}\r\n      label={props.props.title}\r\n      labelPlacement=\"end\"\r\n      checked={isChecked}\r\n    />\r\n  );\r\n}\r\n","export default function arrayRemove(arr, value) {\r\n  return arr.filter(function (ele) {\r\n    return ele !== value;\r\n  });\r\n}\r\n","import \"./Option.css\";\r\nimport React from \"react\";\r\nimport MyCheckbox from \"./MyCheckbox\";\r\nimport { useWindowWidth } from \"@react-hook/window-size\";\r\n\r\nexport default function CheckboxOption(props) {\r\n  props = props.props;\r\n  const windowWidth = useWindowWidth();\r\n\r\n  const create_checkboxes = () => {\r\n    var array = [];\r\n    for (let i = 0; i < props.options.length; i++) {\r\n      const element = props.options[i];\r\n      array.push(\r\n        <MyCheckbox\r\n          props={{ title: element, index: i, category: props.title }}\r\n        />\r\n      );\r\n    }\r\n    return array;\r\n  };\r\n  const checkboxes = create_checkboxes();\r\n\r\n  props.get_selected = () => {\r\n    var checked = [];\r\n    checkboxes.forEach((element) => {\r\n      if (element.props.props.isOn) {\r\n        checked.push(element.props.props.title);\r\n      }\r\n    });\r\n    return checked;\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"radio-container\"\r\n      style={{ width: windowWidth < 1000 ? \"90%\" : \"40%\" }}\r\n    >\r\n      <h3 className=\"snug\">{props.title}</h3>\r\n      {checkboxes}\r\n    </div>\r\n  );\r\n}\r\n","import \"./Option.css\";\r\nimport React from \"react\";\r\nimport { FormControlLabel, Radio, RadioGroup } from \"@material-ui/core\";\r\nimport { useWindowWidth } from \"@react-hook/window-size\";\r\n\r\nexport default function RadioOption(props) {\r\n  const windowWidth = useWindowWidth();\r\n\r\n  props = props.props;\r\n  props.selectedState = \"\";\r\n\r\n  const radioClicked = (event) => {\r\n    props.selectedState = event.target.value;\r\n    sessionStorage.setItem(props.title, event.target.value);\r\n  };\r\n\r\n  const choices = () => {\r\n    var array = [];\r\n    for (let i = 0; i < props.options.length; i++) {\r\n      const element = props.options[i];\r\n      array.push(\r\n        <FormControlLabel\r\n          value={element}\r\n          control={<Radio color=\"primary\" />}\r\n          label={element}\r\n        />\r\n      );\r\n    }\r\n    return array;\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"radio-container\"\r\n      style={{ width: windowWidth < 1000 ? \"90%\" : \"40%\" }}\r\n    >\r\n      <h3 className=\"snug\">{props.title}</h3>\r\n      <RadioGroup onChange={radioClicked}>{choices()}</RadioGroup>\r\n    </div>\r\n  );\r\n}\r\n","import './Categories.css';\r\nimport React, { useState } from 'react';\r\nimport CheckboxOption from './components/CheckboxOption';\r\nimport RadioOption from './components/RadioOption';\r\nimport { Button } from '@material-ui/core';\r\n\r\nexport default function Categories(props) {\r\n\r\n    const [reviewInfo, setReviewInfo] = useState(\"\")\r\n\r\n    const create_categories = () => {\r\n        var array = []\r\n        for (let i = 0; i < props.props.length; i++) {\r\n            const element = props.props[i];\r\n            if (element.type === \"radio\") {\r\n                array.push(<RadioOption props={element} />)\r\n            } else if (element.type === \"check\") {\r\n                array.push(<CheckboxOption props={element} />)\r\n            }\r\n        }\r\n        return array\r\n    }\r\n    const categoryComponents = create_categories()\r\n\r\n    const generate_review = () => {\r\n        var localReviewString = \"\"\r\n\r\n        function appendCategoryTitle(title) {\r\n            localReviewString += \"---{ \" + title + \" }---\\n\"\r\n        }\r\n\r\n        function appendOption(option, checked) {\r\n            localReviewString += (checked ? \"☑ \" : \"☐ \") + option + \"\\n\"\r\n        }\r\n\r\n        for (let i = 0; i < props.props.length; i++) {\r\n            const categoryJson = props.props[i];\r\n\r\n            appendCategoryTitle(categoryJson.title)\r\n\r\n            // With radio, only one option is selected\r\n            if (categoryJson.type === \"radio\") {\r\n                const saved = sessionStorage.getItem(categoryJson.title) || \"\"\r\n                categoryJson.options.forEach(option => {\r\n                    appendOption(option, saved === option)\r\n                });\r\n            } else if (categoryJson.type === \"check\") {\r\n                // With checkbox, multiple options can be selected\r\n                const selectedOptions = JSON.parse(sessionStorage.getItem(categoryJson.title) || \"[]\")\r\n                categoryJson.options.forEach(option => {\r\n                    appendOption(option, selectedOptions.includes(option))\r\n                });\r\n            } else {\r\n                localReviewString += \"ERROR - bad category type. (radio | check)\\n\"\r\n            }\r\n\r\n            // newline under every category\r\n            localReviewString += \"\\n\"\r\n        }\r\n\r\n        // Credit \r\n        localReviewString += \"\\nGrab this review template here! 👉 https://vojtastruhar.github.io/steam-review-template/\\n\"\r\n\r\n        navigator.clipboard.writeText(localReviewString).then(function () {\r\n            console.log('Async: Copying to clipboard was successful!');\r\n            setReviewInfo(\"The review has been copied into your clipboard!\")\r\n        }, function (err) {\r\n            console.error('Async: Could not copy text: ', err);\r\n            setReviewInfo(\"Copying into clipboard failed. New window with the review should appear, please, copy it manually.\")\r\n            check_review_in_new_window(localReviewString)\r\n        });\r\n    }\r\n\r\n    const check_review_in_new_window = (text) => {\r\n        var newWin = window.open('url', 'Steam review', 'height=700,width=500,scrollbars=yes,resizable=yes');\r\n        newWin.document.write(String.raw`${text.replaceAll(\"\\n\", \"<br/>\")}`);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"centered\">\r\n                <div>\r\n                    {categoryComponents}\r\n                </div>\r\n            </div>\r\n            <div className=\"button-centered\">\r\n                <Button variant=\"contained\" color=\"primary\" onClick={generate_review}>\r\n                    Generate Steam Review\r\n                </Button>\r\n                {reviewInfo !== \"\" &&\r\n                    <p className=\"review\" >{reviewInfo}</p>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import \"./App.css\";\r\nimport Categories from \"./Categories\";\r\nimport config_json from \"./review_templates/config_rdr2.json\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div>\r\n      <header className=\"App-header\">\r\n        <h2 className=\"App-header\">{\"---{ Review Template }---\"}</h2>\r\n        <p className=\"App-header\">☑ Awesome</p>\r\n      </header>\r\n\r\n      <div className=\"categories-container\">\r\n        <Categories props={config_json.categories} />\r\n      </div>\r\n\r\n      <footer className=\"App-footer\">\r\n        <p className=\"signature\">Vojtěch Struhár, 2021</p>\r\n      </footer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}