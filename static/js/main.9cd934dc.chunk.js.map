{"version":3,"sources":["MyCheckbox.js","CheckboxOption.js","RadioOption.js","Category.js","App.js","reportWebVitals.js","index.js"],"names":["MyCheckbox","props","useState","isChecked","setIsChecked","FormControlLabel","value","index","control","Checkbox","color","onClick","isOn","label","title","labelPlacement","checked","CheckboxOption","checkboxes","array","i","options","length","element","push","create_checkboxes","get_selected","forEach","className","RadioOption","selectedState","RadioGroup","onChange","event","target","Radio","choices","Categories","reviewString","setReviewString","reviewInfo","setReviewInfo","clipboardFailed","setClipboardFailed","categoryComponents","type","create_categories","Button","variant","localReviewString","categoryJson","component","option","selectedOptions","includes","console","log","navigator","clipboard","writeText","then","err","error","window","open","document","write","String","raw","replaceAll","App","config_json","categories","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.9cd934dc.chunk.js","sourcesContent":["import './Option.css';\r\nimport React, { Component, useState } from 'react';\r\nimport { Checkbox, FormControlLabel } from '@material-ui/core';\r\n\r\nexport default function MyCheckbox(props) {\r\n    const [isChecked, setIsChecked] = useState(false)\r\n\r\n    const toggle = () => {\r\n        props.props.isOn = !isChecked;\r\n        setIsChecked(!isChecked)\r\n    }\r\n\r\n    return (\r\n        <FormControlLabel\r\n            value={props.props.index}\r\n            control={<Checkbox color=\"primary\"\r\n                onClick={ toggle } />}\r\n            label={props.props.title}\r\n            labelPlacement=\"end\"\r\n            checked={isChecked}\r\n        />\r\n    );\r\n}","import './Option.css';\r\nimport React, { Component, useState } from 'react';\r\nimport { Checkbox, FormControlLabel } from '@material-ui/core';\r\nimport MyCheckbox from './MyCheckbox';\r\n\r\nexport default function CheckboxOption(props) {\r\n    props = props.props\r\n\r\n    const create_checkboxes = () => {\r\n        var array = []\r\n        for (let i = 0; i < props.options.length; i++) {\r\n            const element = props.options[i];\r\n            array.push(<MyCheckbox props={{title: element, index: i, isOn: false}} />)\r\n        }\r\n        return array\r\n    }\r\n    const checkboxes = create_checkboxes()\r\n\r\n    props.get_selected = () => {\r\n        var checked = []\r\n        checkboxes.forEach(element => {\r\n            if (element.props.props.isOn) {\r\n                checked.push(element.props.props.title)\r\n            }\r\n        });\r\n        return checked\r\n    }\r\n    \r\n    return (\r\n        <div className=\"radio-container\">\r\n            <h3 className=\"snug\">{props.title}</h3>\r\n            {checkboxes}\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\n","import './Option.css';\r\nimport React, { useState } from 'react';\r\nimport { FormControlLabel, Radio, FormLabel, RadioGroup, FormControl } from '@material-ui/core';\r\n\r\n\r\nexport default function RadioOption(props) {\r\n    props = props.props // This is kinda dumb, i dont get why JS does this to me\r\n    props.selectedState = \"\"\r\n\r\n    const radioClicked = (event) => {\r\n        props.selectedState = event.target.value\r\n    };\r\n\r\n    const choices = () => {\r\n        var array = []\r\n        for (let i = 0; i < props.options.length; i++) {\r\n            const element = props.options[i];\r\n            array.push(<FormControlLabel value={element} control={<Radio color=\"primary\" />} label={element} />)\r\n        }\r\n        return array\r\n    }\r\n\r\n    return (\r\n        <div className=\"radio-container\">\r\n            <h3 className=\"snug\">{props.title}</h3>\r\n            <RadioGroup onChange={radioClicked}>\r\n                {choices()}\r\n            </RadioGroup>\r\n        </div>\r\n    );\r\n};\r\n\r\n","import './Category.css';\r\nimport React, { useState } from 'react';\r\nimport CheckboxOption from './CheckboxOption';\r\nimport RadioOption from './RadioOption';\r\nimport { Button } from '@material-ui/core';\r\n\r\nexport default function Categories(props) {\r\n\r\n    const [reviewString, setReviewString] = useState(\"\")\r\n    const [reviewInfo, setReviewInfo] = useState(\"\")\r\n    const [clipboardFailed, setClipboardFailed] = useState(false) \r\n    \r\n    const create_categories = () => {\r\n        var array = []\r\n        for (let i = 0; i < props.props.length; i++) {\r\n            const element = props.props[i];\r\n            if (element.type === \"radio\") {\r\n                array.push(<RadioOption props={element} />)\r\n            } else if (element.type === \"check\") {\r\n                array.push(<CheckboxOption props={element} />)\r\n            }\r\n        }\r\n        return array\r\n    }\r\n    const categoryComponents = create_categories()\r\n\r\n    const generate_review = () => {\r\n        var localReviewString = \"\"\r\n\r\n        for (let i = 0; i < props.props.length; i++) {\r\n            const categoryJson = props.props[i];\r\n            const component = categoryComponents[i];\r\n\r\n\r\n            localReviewString = localReviewString + \"---{ \" + categoryJson.title + \" }---\\n\"\r\n\r\n\r\n            // With radio, only one option is selected\r\n            if (categoryJson.type === \"radio\") {\r\n                categoryJson.options.forEach(option => {\r\n                    localReviewString += ((component.props.props.selectedState === option ? \"☑ \" : \"☐ \") + option)\r\n                    localReviewString += \"\\n\"\r\n                });\r\n            } else if (categoryJson.type === \"check\") {\r\n                const selectedOptions = component.props.props.get_selected()\r\n                categoryJson.options.forEach(option => {\r\n                    // This check could have lesser complexity...\r\n                    localReviewString += ((selectedOptions.includes(option) ? \"☑ \" : \"☐ \") + option)\r\n                    localReviewString += \"\\n\"\r\n                });\r\n            } else {\r\n                localReviewString += \"ERROR - bad category type (should be 'radio' or 'check')\\n\"\r\n            }\r\n            localReviewString += \"\\n\"\r\n        }\r\n        console.log(localReviewString)\r\n        setReviewString(localReviewString)\r\n\r\n        navigator.clipboard.writeText(localReviewString).then(function () {\r\n            console.log('Async: Copying to clipboard was successful!');\r\n            setReviewInfo(\"The review has been copied into your clipboard!\")\r\n            setClipboardFailed(false)\r\n        }, function (err) {\r\n            console.error('Async: Could not copy text: ', err);\r\n            setReviewInfo(\"Copying into clipboard failed.\")\r\n            setClipboardFailed(true)\r\n        });\r\n    }\r\n\r\n    const check_review_in_new_window = () => {\r\n        var newWin = window.open('url','Steam review','height=700,width=400,scrollbars=yes,resizable=yes');\r\n        newWin.document.write(String.raw`${reviewString.replaceAll(\"\\n\", \"<br/>\")}`);\r\n        console.log(reviewString)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"centered\">\r\n                <div>\r\n                    {categoryComponents}\r\n                </div>\r\n            </div>\r\n            <div className=\"button-centered\">\r\n                <Button variant=\"contained\" color=\"primary\" onClick={generate_review}>\r\n                    Generate Steam Review\r\n                </Button>\r\n                {reviewInfo !== \"\" &&\r\n                    <p className=\"review\" >{reviewInfo}</p>\r\n                }\r\n                {clipboardFailed &&\r\n                    <Button onClick={check_review_in_new_window}>View text in separate window</Button>\r\n                }\r\n            </div>\r\n            <div>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import './App.css';\r\nimport Categories from './Category';\r\nimport config_json from './review_templates/config_rdr2.json'\r\n\r\nfunction App() {\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <h2 className=\"App-header\">{\"---{ Review Template }---\"}</h2>\r\n        <p className=\"App-header\">☑ Awesome</p>\r\n      </header>\r\n      \r\n      <div className=\"categories-container\">\r\n        <Categories props={config_json.categories}/>\r\n      </div>\r\n\r\n      \r\n      <footer className=\"App-footer\">\r\n        <p className=\"signature\">Vojtěch Struhár, 2021</p>\r\n      </footer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}